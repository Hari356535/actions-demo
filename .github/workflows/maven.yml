# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ##############################
  ######## Job 1: Build ########
  ##############################
  build:

    # The permissions are sometimes needed as we may need to give "access" to workflows do operations
    # in our Repository. For example: Write comments in a Pull Request
    permissions: write-all

    # Or more fine-grained.
    # Check more on: https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/controlling-permissions-for-github_token
    #permissions:
    #  contents: read
    #  pull-requests: write

    # Runner. Read more: https://docs.github.com/en/actions/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners
    runs-on: ubuntu-latest

    steps:

      ##########################
      ######## Checkout ########
      ##########################
      - uses: actions/checkout@v4.1.7 # https://github.com/marketplace/actions/checkout

      #########################################
      ######## Setup Java (with cache) ########
      #########################################
      - name: Set up JDK 17
        uses: actions/setup-java@v4.4.0 # https://github.com/marketplace/actions/setup-java-jdk
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

        ###################################
        ######## Caching Mechanism ########
        ###################################

        # Caching Mechanism (not needed as it has been incorporated to setup-java action by declaring "cache: maven"
        #- name: Cache local Maven repository
        #  uses: actions/cache@v4.0.2 # https://github.com/marketplace/actions/cache
        #  with:
        #    path: ~/.m2/repository
        #    key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        #    restore-keys: |
        #      ${{ runner.os }}-maven-

        #################################
        ######## Replace Secrets ########
        #################################
        # Use this when working with a database, to replace secrets with their values
        #- name: Set Database Secrets
        #  run: |
        #    sed -i 's/##db.username##/${{ secrets.DB_USERNAME }}/g' src/main/resources/application.yaml
        #    sed -i 's/##db.password##/${{ secrets.DB_PASSWORD }}/g' src/main/resources/application.yaml

        #######################
        ######## Build ########
        #######################
      - name: Build with Maven
        run: mvn -B package

        ###################################
        ######## Archive Artifacts ########
        ###################################
      - name: Archive Test Reports
        # Always run even if the build fails
        if: always()
        uses: actions/upload-artifact@v4.4.0 # https://github.com/marketplace/actions/upload-a-build-artifact
        with:
          name: test-reports
          path: target/surefire-reports/

      - name: Archive Code Coverage Report
        if: always()
        uses: actions/upload-artifact@v4.4.0 # https://github.com/marketplace/actions/upload-a-build-artifact
        with:
          name: coverage-report
          path: target/site/jacoco/

      - name: Upload .jar artifacts
        uses: actions/upload-artifact@v4.4.0
        with:
          name: app-executables
          path: target/*.jar

        #####################################
        ######## Coverage Info in PR ########
        #####################################

        # Post a comment in the Pull Request, regarding the Coverage report.
        # This action is automatically skipped if trigger event is not PR. Check their docs for more info.
      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.7.1 # https://github.com/marketplace/actions/jacoco-report
        with:
          paths: |
            target/site/jacoco/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 30
          min-coverage-changed-files: 90
          title: '# :lobster: Coverage Report'
          pass-emoji: ':green_circle:'
          fail-emoji: ':red_circle:'

      - name: Fail PR if overall coverage is less than 30%
        if: ${{ steps.jacoco.outputs.coverage-overall < 30.0 }}
        uses: actions/github-script@v7.0.1 # https://github.com/marketplace/actions/github-script
        with:
          script: |
            core.setFailed('Coverage is less than 30%!')

        ###############################
        ######## Notifications ########
        ###############################
        # Notification to Slack
        # If enables, you should declare SLACK_WEBHOOK_URL from your Slack account and also in previous steps
        # fill with contents the payload that will be sent to Slack (file payload-slack.json)
        #- name: Send custom JSON data to Slack workflow
        #  id: slack
        #  uses: slackapi/slack-github-action@v1.27.0
        #  with:
        #    payload-file-path: "./payload-slack.json"
        #  env:
        #    SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}


        ##############################
        ######## Docker Build ########
        ##############################
      # Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Build Image. TODO: make sure you change the image name properly (username should your user)
      # Check more here: https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images#publishing-images-to-github-packages
      - name: Build Docker image
        run: docker build -t ghcr.io/lefterisxris/gh_actions:latest .

      # Push Docker images to GitHub Container Registry. TODO: make sure you change the image name properly (username should your user)
      # Check more here: https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images#publishing-images-to-github-packages
      - name: Push Docker image to GHCR
        run: docker push ghcr.io/lefterisxris/gh_actions:latest

      ############################
      ######## Deployment ########
      ############################
      # SSH into a Server and deploy. TODO: Configure the GitHub secrets for your server
      #- name: Deploy to Server over SSH
      #  env:
      #    SSH_PRIVATE_KEY: ${{ secrets.SERVER_DEPLOY_KEY }}
      #    SERVER_HOST: ${{ secrets.SERVER_HOST }}
      #    SERVER_USER: ${{ secrets.SERVER_USER }}
      #    PKI_SSH_PASSPHRASE: ${{ secrets.PKI_SSH_PASSPHRASE }}
      #  run: |
      #    mkdir -p ~/.ssh
      #    echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
      #    chmod 600 ~/.ssh/id_rsa
      #    eval $(ssh-agent -s)
      #    echo "$PKI_SSH_PASSPHRASE" | ssh-add ~/.ssh/id_rsa
      #    ssh-keyscan $SERVER_HOST >> ~/.ssh/known_hosts
      #
      #    ssh $SERVER_USER@$SERVER_HOST << 'EOF'
      #      cd /home/user/project_with_docker_compose_file
      #      docker compose down 2>&1
      #      docker compose pull 2>&1
      #      docker compose up -d 2>&1
      #    EOF

      # Alternative deployment of target file (might zip or any other file), using scp utility
      # scp app.jar $SERVER_USER@$SERVER_HOST:$TARGET_DIR/app.jar

  #############################################
  ######## Job 2: Create Draft Release ########
  #############################################
  draftReleaseJob:
    name: Create Draft Release
    runs-on: ubuntu-latest
    needs: build
    permissions: write-all
    if: github.event_name == 'push' && startsWith(github.event.head_commit.message, 'Merge pull request')
    # Could also be as below, if workflow is triggered only on pr events:
    # if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          name: app-executables
          path: ./downloads

      - name: Create Draft Release
        uses: softprops/action-gh-release@v2.0.8
        with:
          files: ./downloads/**
          name: "Draft release after so much good work!"
          body: |
            # The anticipated Release is here! :lobster:

            ## Changelog:
            - Feature 1: Added support for X
            - Feature 2: Improved performance for Y
            - Bugfix: Resolved issue with Z

            Thank you for your contributions!
          draft: true
          tag_name: ${{ github.sha }}
